<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Android逆向分析 on shesl-meow's note site</title><link>http://shesl-meow.github.io/docs/%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF/android%E9%80%86%E5%90%91%E5%88%86%E6%9E%90/</link><description>Recent content in Android逆向分析 on shesl-meow's note site</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="http://shesl-meow.github.io/docs/%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF/android%E9%80%86%E5%90%91%E5%88%86%E6%9E%90/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>http://shesl-meow.github.io/docs/%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF/android%E9%80%86%E5%90%91%E5%88%86%E6%9E%90/1.%E5%88%86%E6%9E%90%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://shesl-meow.github.io/docs/%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF/android%E9%80%86%E5%90%91%E5%88%86%E6%9E%90/1.%E5%88%86%E6%9E%90%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</guid><description>Android 程序分析环境搭建 # Windows 环境搭建 # 安装 JDK。以下命令检测是否安全成功。
$ java -version 安装 android-sdk。不知道哪次更新之后，这些命令行工具全部集成到了 Android Studio 里面，在 Android Studio 中打开 SDK Manager 就可以安装。
以下命令检测两个工具是否安装成功：
$ adb --version Android Debug Bridge version 1.0.39 ... $ emulator -version Android emulator version 28.0.23.0 (build_id 5264690) (CL:be2be19ca0131957449e8c0ded5e55070f9537b0) ... NOTICE:
本书中的环境搭建大多都过时了，开发工具建议直接安装 Android Studio，逆向工具建议直接安装吾爱破解的安装包。</description></item><item><title/><link>http://shesl-meow.github.io/docs/%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF/android%E9%80%86%E5%90%91%E5%88%86%E6%9E%90/2.%E5%A6%82%E4%BD%95%E5%88%86%E6%9E%90%E5%AE%89%E5%8D%93%E7%A8%8B%E5%BA%8F/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://shesl-meow.github.io/docs/%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF/android%E9%80%86%E5%90%91%E5%88%86%E6%9E%90/2.%E5%A6%82%E4%BD%95%E5%88%86%E6%9E%90%E5%AE%89%E5%8D%93%E7%A8%8B%E5%BA%8F/</guid><description>如何分析安卓程序 # 第一个安卓程序 # 已经上传至 github：https://github.com/shesl-meow/AndroidReverse.git
编译生成 .apk 文件，可以直接在 Android Studio 中进行操作。
破解第一个程序 # 反编译 APK 文件 # 安装 apktool，这是一个 github 的开源软件：https://github.com/iBotPeaches/Apktool
在 Windows 下，可以直接使用 choco 进行安装：
&amp;gt; choco install apktool 关于 apktool 的使用教程可以参考：apktool
分析 APK 文件 # 在目标文件夹下（与开发时的源码目录结构是一样的）：
smali 目录存放了程序的所有反汇编代码 res 目录下存放了程序中所有的资源文件 以上的 Android 程序的分析步骤：
res/values/strings.xml 被加密存储为 resources.arsc，当程序被反汇编成功后这个文件也被解密了出来。
在这里存储了 Android 程序中存储使用的所有字符串。
使用以下的命令查找 注册失败 的提示信息：
$ cat ./res/values/strings.xml | grep 注册错误 &amp;lt;string name=&amp;#34;unsuccess_msg&amp;#34;&amp;gt;注册错误&amp;lt;/string&amp;gt; 所有的字符串都在 gen/&amp;lt;packagename&amp;gt;/R.</description></item><item><title/><link>http://shesl-meow.github.io/docs/%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF/android%E9%80%86%E5%90%91%E5%88%86%E6%9E%90/3.dalvik%E8%99%9A%E6%8B%9F%E6%9C%BA/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://shesl-meow.github.io/docs/%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF/android%E9%80%86%E5%90%91%E5%88%86%E6%9E%90/3.dalvik%E8%99%9A%E6%8B%9F%E6%9C%BA/</guid><description>Android Dalvik 虚拟机 # 虽然 Android 平台使用 Java 语言来开发应用程序，但 Android 程序却不是运行在标准 Java 虚拟机上，而是 Dalvik Virtual Machine（Dalvik 虚拟机）。
Dalvik 虚拟机的特点 # 与 Java 虚拟机的区别 # 主要区别：
Java 虚拟机运行的是 Java 字节码，Dalvik 虚拟机运行的是 Dalvik 字节码。
所有的 Dalvik 字节码由 Java 字节码转化而来，并且被打包到一个 DEX（Dalvik Executable）可执行文件中。Dalvik 虚拟机通过解释 DEX 文件来执行这些字节码。
Dalvik 可执行文件体积更小。
Android SDK 中有一个叫 dx 的工具负责将 Java 字节码转换为 Dalvik 字节码。
Java 虚拟机与 Dalvik 虚拟机架构不同。
Java 虚拟机基于栈结构。程序在运行时需要频繁地从栈上读取或写入数据。
Dalvik 虚拟机基于寄存器架构。数据的访问通过寄存器间直接传递。</description></item><item><title/><link>http://shesl-meow.github.io/docs/%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF/android%E9%80%86%E5%90%91%E5%88%86%E6%9E%90/4.android%E5%8F%AF%E6%89%A7%E8%A1%8C%E6%96%87%E4%BB%B6/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://shesl-meow.github.io/docs/%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF/android%E9%80%86%E5%90%91%E5%88%86%E6%9E%90/4.android%E5%8F%AF%E6%89%A7%E8%A1%8C%E6%96%87%E4%BB%B6/</guid><description>Android 可执行文件 # Android 程序的生成步骤 # Google 提供了 Android SDK 供程序员来开发 Android 平台的软件。每个软件在最终发布时会打包成一个 apk 文件，将 apk 文件 传送到 Android 设备中运行即可安装。</description></item></channel></rss>