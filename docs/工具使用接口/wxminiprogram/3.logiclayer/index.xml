<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>3.LogicLayer on shesl-meow's note site</title><link>http://shesl-meow.github.io/docs/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8%E6%8E%A5%E5%8F%A3/wxminiprogram/3.logiclayer/</link><description>Recent content in 3.LogicLayer on shesl-meow's note site</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="http://shesl-meow.github.io/docs/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8%E6%8E%A5%E5%8F%A3/wxminiprogram/3.logiclayer/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>http://shesl-meow.github.io/docs/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8%E6%8E%A5%E5%8F%A3/wxminiprogram/3.logiclayer/1.registerprocess/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://shesl-meow.github.io/docs/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8%E6%8E%A5%E5%8F%A3/wxminiprogram/3.logiclayer/1.registerprocess/</guid><description>注册程序 App # App(Object) # App() 函数用来注册一个小程序。接受一个 Object 参数，其指定小程序的生命周期回调等。
App() 必须在 app.js 中调用，必须调用且只能调用一次。不然会出现无法预期的后果。
Object 参数说明：
属性 类型 描述 触发时机 onLaunch Function 生命周期回调—监听小程序初始化 小程序初始化完成时（全局只触发一次） onShow Function 生命周期回调—监听小程序显示 小程序启动，或从后台进入前台显示时 onHide Function 生命周期回调—监听小程序隐藏 小程序从前台进入后台时 onError Function 错误监听函数 小程序发生脚本错误，或者 api 调用失败时触发，会带上错误信息 onPageNotFound Function 页面不存在监听函数 小程序要打开的页面不存在时触发，会带上页面信息回调该函数 其他 Any 开发者可以添加任意的函数或数据到 Object 参数中，用 this 可以访问 前台、后台定义： 当用户点击左上角关闭，或者按了设备 Home 键离开微信，小程序并没有直接销毁，而是进入了后台；当再次进入微信或再次打开小程序，又会从后台进入前台。需要注意的是：只有当小程序进入后台一定时间，或者系统资源占用过高，才会被真正的销毁。</description></item><item><title/><link>http://shesl-meow.github.io/docs/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8%E6%8E%A5%E5%8F%A3/wxminiprogram/3.logiclayer/2.scenevalues/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://shesl-meow.github.io/docs/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8%E6%8E%A5%E5%8F%A3/wxminiprogram/3.logiclayer/2.scenevalues/</guid><description>场景值 # 基础库 1.1.0 开始支持，低版本需做兼容处理。
当前支持的场景值有：
场景值ID 说明 1001 发现栏小程序主入口，「最近使用」列表（基础库2.2.4版本起包含「我的小程序」列表） 1005 顶部搜索框的搜索结果页 1006 发现栏小程序主入口搜索框的搜索结果页 1007 单人聊天会话中的小程序消息卡片 1008 群聊会话中的小程序消息卡片 1011 扫描二维码 1012 长按图片识别二维码 1013 手机相册选取二维码 1014 小程序模板消息 1017 前往体验版的入口页 1019 微信钱包 1020 公众号 profile 页相关小程序列表 1022 聊天顶部置顶小程序入口 1023 安卓系统桌面图标 1024 小程序 profile 页 1025 扫描一维码 1026 附近小程序列表 1027 顶部搜索框搜索结果页「使用过的小程序」列表 1028 我的卡包 1029 卡券详情页 1030 自动化测试下打开小程序 1031 长按图片识别一维码 1032 手机相册选取一维码 1034 微信支付完成页 1035 公众号自定义菜单 1036 App 分享消息卡片 1037 小程序打开小程序 1038 从另一个小程序返回 1039 摇电视 1042 添加好友搜索框的搜索结果页 1043 公众号模板消息 1044 带 shareTicket 的小程序消息卡片 详情 1045 朋友圈广告 1046 朋友圈广告详情页 1047 扫描小程序码 1048 长按图片识别小程序码 1049 手机相册选取小程序码 1052 卡券的适用门店列表 1053 搜一搜的结果页 1054 顶部搜索框小程序快捷入口 1056 音乐播放器菜单 1057 钱包中的银行卡详情页 1058 公众号文章 1059 体验版小程序绑定邀请页 1064 微信连Wi-Fi状态栏 1067 公众号文章广告 1068 附近小程序列表广告 1069 移动应用 1071 钱包中的银行卡列表页 1072 二维码收款页面 1073 客服消息列表下发的小程序消息卡片 1074 公众号会话下发的小程序消息卡片 1077 摇周边 1078 连Wi-Fi成功页 1079 微信游戏中心 1081 客服消息下发的文字链 1082 公众号会话下发的文字链 1084 朋友圈广告原生页 1089 微信聊天主界面下拉，「最近使用」栏（基础库2.</description></item><item><title/><link>http://shesl-meow.github.io/docs/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8%E6%8E%A5%E5%8F%A3/wxminiprogram/3.logiclayer/3.registrationpage/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://shesl-meow.github.io/docs/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8%E6%8E%A5%E5%8F%A3/wxminiprogram/3.logiclayer/3.registrationpage/</guid><description>注册页面 Page # Page(Object) # Page(Object) 函数用来注册一个页面。接受一个 Object 类型参数，其指定页面的初始数据、生命周期回调、事件处理函数等。
Object 参数说明：
属性 类型 描述 data Object 页面的初始数据 onLoad Function 生命周期回调—监听页面加载 onShow Function 生命周期回调—监听页面显示 onReady Function 生命周期回调—监听页面初次渲染完成 onHide Function 生命周期回调—监听页面隐藏 onUnload Function 生命周期回调—监听页面卸载 onPullDownRefresh Function 监听用户下拉动作 onReachBottom Function 页面上拉触底事件的处理函数 onShareAppMessage Function 用户点击右上角转发 onPageScroll Function 页面滚动触发事件的处理函数 onResize Function 页面尺寸改变时触发，详见 响应显示区域变化 onTabItemTap Function 当前是 tab 页时，点击 tab 时触发 其他 Any 开发者可以添加任意的函数或数据到 Object 参数中，在页面的函数中用 this 可以访问 除了 Page ，作为高级用法，页面可以像自定义组件一样使用 Component 来创建，这样就可以使用自定义组件的特性，如 behaviors 等。具体细节请阅读 Component 构造器 章节。</description></item><item><title/><link>http://shesl-meow.github.io/docs/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8%E6%8E%A5%E5%8F%A3/wxminiprogram/3.logiclayer/4.route/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://shesl-meow.github.io/docs/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8%E6%8E%A5%E5%8F%A3/wxminiprogram/3.logiclayer/4.route/</guid><description>页面路由 # 页面栈 # 框架以栈的形式维护了当前的所有页面。 当发生路由切换的时候，页面栈的表现如下：
路由方式 页面栈表现 初始化 新页面入栈 打开新页面 新页面入栈 页面重定向 当前页面出栈，新页面入栈 页面返回 页面不断出栈，直到目标返回页 Tab 切换 页面全部出栈，只留下新的 Tab 页面 重加载 页面全部出栈，只留下新的页面 getCurrentPages() # getCurrentPages() 函数用于获取当前页面栈的实例，以数组形式按栈的顺序给出，第一个元素为首页，最后一个元素为当前页面。
注意：
不要尝试修改页面栈，会导致路由以及页面状态错误。 不要在 App.onLaunch 的时候调用 getCurrentPages()，此时 page 还没有生成。 路由方式 # 对于路由的触发方式以及页面生命周期函数如下：
路由方式 触发时机 路由前页面 路由后页面 初始化 小程序打开的第一个页面 onLoad, onShow 打开新页面 调用 API wx.</description></item><item><title/><link>http://shesl-meow.github.io/docs/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8%E6%8E%A5%E5%8F%A3/wxminiprogram/3.logiclayer/5.modular/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://shesl-meow.github.io/docs/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8%E6%8E%A5%E5%8F%A3/wxminiprogram/3.logiclayer/5.modular/</guid><description>模块化 # 文件作用域 # 在 JavaScript 文件中声明的变量和函数只在该文件中有效；不同的文件中可以声明相同名字的变量和函数，不会互相影响。
通过全局函数 getApp() 可以获取全局的应用实例，如果需要全局的数据可以在 App() 中设置，如：
// app.js App({ globalData: 1 }) // a.js // The localValue can only be used in file a.js. const localValue = &amp;#39;a&amp;#39; // Get the app instance. const app = getApp() // Get the global data and change it. app.globalData++ // b.js // You can redefine localValue in file b.js, without interference with the localValue in a.</description></item><item><title/><link>http://shesl-meow.github.io/docs/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8%E6%8E%A5%E5%8F%A3/wxminiprogram/3.logiclayer/6.api/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://shesl-meow.github.io/docs/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8%E6%8E%A5%E5%8F%A3/wxminiprogram/3.logiclayer/6.api/</guid><description>API # 小程序开发框架提供丰富的微信原生 API，可以方便的调起微信提供的能力，如获取用户信息，本地存储，支付功能等。详细介绍请参考 API 文档。
事件监听 API # 我们约定，以 on 开头的 API 用来监听某个事件是否触发，如：wx.onSocketOpen，wx.onCompassChange 等。
这类 API 接受一个回调函数作为参数，当事件触发时会调用这个回调函数，并将相关数据以参数形式传入。
例如：
wx.onCompassChange(function (res) { console.log(res.direction) }) 同步 API # 我们约定，以 Sync 结尾的 API 都是同步 API， 如 wx.setStorageSync，wx.getSystemInfoSync 等。此外，也有一些其他的同步 API，如 wx.createWorker，wx.getBackgroundAudioManager 等，详情参见 API 文档中的说明。
同步 API 的执行结果可以通过函数返回值直接获取，如果执行出错会抛出异常。
try { wx.setStorageSync(&amp;#39;key&amp;#39;, &amp;#39;value&amp;#39;) } catch (e) { console.error(e) } 异步 API # 大多数 API 都是异步 API，如 wx.request，wx.login 等。这类 API 接口通常都接受一个 Object 类型的参数，这个参数都支持按需指定以下字段来接收接口调用结果：</description></item></channel></rss>