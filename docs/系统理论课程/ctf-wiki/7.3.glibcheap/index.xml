<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>7.3.GlibcHeap on shesl-meow's note site</title><link>http://shesl-meow.github.io/docs/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/ctf-wiki/7.3.glibcheap/</link><description>Recent content in 7.3.GlibcHeap on shesl-meow's note site</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="http://shesl-meow.github.io/docs/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/ctf-wiki/7.3.glibcheap/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>http://shesl-meow.github.io/docs/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/ctf-wiki/7.3.glibcheap/0.%E6%BC%8F%E6%B4%9E%E7%B1%BB%E5%9E%8B/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://shesl-meow.github.io/docs/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/ctf-wiki/7.3.glibcheap/0.%E6%BC%8F%E6%B4%9E%E7%B1%BB%E5%9E%8B/</guid><description>漏洞类型 # Off By One 漏洞 # 漏洞原理 # 严格来说 off-by-one 漏洞是一种特殊的溢出漏洞，off-by-one 指程序向缓冲区中写入时，写入的字节数超过了这个缓冲区本身所申请的字节数并且只越界了一个字节。
一般来说，单字节溢出被认为是难以利用的，但是因为 Linux 的堆管理机制 ptmalloc 验证的松散性，基于 Linux 堆的 off-by-one 漏洞利用起来并不复杂，并且威力强大。
利用思路 # 根据溢出的字节类型，可以分为以下两种情况：
溢出字节为任意可以控制的字节。通过修改大小造成块之间出现重叠，从而泄露或覆盖其他块的数据。 溢出字节为 NULL 字节。在 size=0x100 时，溢出 NULL 字节会使 prev_in_use 位被清零： 这时可以选择 unlink 方法进行处理（漏洞利用方式 unlink）； 另外 prev_size 域就会启用，伪造 prev_size 可以造成块之间的重叠（glibc2.28 已经修复）。 使用示例 # Asis CTF 2016 b00ks
Use After Free 漏洞 # 漏洞原理 # Use After Free 即释放后重用，可以利用的漏洞主要分为以下两种情况：</description></item><item><title/><link>http://shesl-meow.github.io/docs/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/ctf-wiki/7.3.glibcheap/1.unlink/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://shesl-meow.github.io/docs/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/ctf-wiki/7.3.glibcheap/1.unlink/</guid><description>Unlink # unlink 是什么？
它是 glibc 中通过宏实现的一个函数，在 GlibcHeap 中有源码介绍； unlink 的目的是将 bin 链表中的一个元素从链表中取出；</description></item></channel></rss>