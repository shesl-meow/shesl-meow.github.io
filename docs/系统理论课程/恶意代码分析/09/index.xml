<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>09 on shesl-meow's note site</title><link>http://shesl-meow.github.io/docs/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/%E6%81%B6%E6%84%8F%E4%BB%A3%E7%A0%81%E5%88%86%E6%9E%90/09/</link><description>Recent content in 09 on shesl-meow's note site</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="http://shesl-meow.github.io/docs/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/%E6%81%B6%E6%84%8F%E4%BB%A3%E7%A0%81%E5%88%86%E6%9E%90/09/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>http://shesl-meow.github.io/docs/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/%E6%81%B6%E6%84%8F%E4%BB%A3%E7%A0%81%E5%88%86%E6%9E%90/09/lab9-1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://shesl-meow.github.io/docs/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/%E6%81%B6%E6%84%8F%E4%BB%A3%E7%A0%81%E5%88%86%E6%9E%90/09/lab9-1/</guid><description>lab 9-1 # QUESTION 1 # How can you get this malware to install itself?
在 BinaryCollection/ 文件夹下运行 diff 命令可以查看两个文件之间的差异：
$ diff Chapter_9L/Lab09-01.exe Chapter_3L/Lab03-04.exe # 没有返回值说明这两个文件没有任何不同 我们发现 Lab09-01.exe 与 Lab03-04.exe 是同一个文件。在 Lab03-04 中，我们的分析结果是这个文件运行起来就直接闪退并且把自己删除了。
我们先用 PE Explorer 查看这个函数的导入表内容：
可见它导入的动态链接库以及其中调用的函数都非常敏感：
KERNEL32.dll 中的 CopyFileA()、WriteFile() 等操作文件的函数， CreateProcess() 等操作进程、互斥量等相关的函数； ADVAPI32.dll 中的 RegSetValueExA() 等操作注册表的函数，CreateService()、DeleteService() 等控制系统服务的函数； SHELL32.dll 动态链接库仅导入了一个函数，但非常敏感：ShellExecuteA()； WS2_32.dll 则是 Windows Socket 编程中最常用的动态链接库，这说明这个程序会有网络请求。 然后我们用 Ida Pro 打开这个文件，查看其中的 main 函数伪代码，发现其中的主要代码结构是一个如下的 if 语句结构：</description></item><item><title/><link>http://shesl-meow.github.io/docs/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/%E6%81%B6%E6%84%8F%E4%BB%A3%E7%A0%81%E5%88%86%E6%9E%90/09/lab9-2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://shesl-meow.github.io/docs/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/%E6%81%B6%E6%84%8F%E4%BB%A3%E7%A0%81%E5%88%86%E6%9E%90/09/lab9-2/</guid><description>lab 9-2 # QUESTION 1 # What strings do you see statically in the binary?
首先使用 PEexplorer 中的反汇编功能查看其中的 .rdata 段：
QUESTION 2 # What happens when you run this binary?
运行程序，没有任何反应。 使用 Process Monitor 查看，存在一些文件和注册表操作。
QUESTION 3 # How can you get this sample to run its malicious payload?
QUESTION 4 #</description></item></channel></rss>