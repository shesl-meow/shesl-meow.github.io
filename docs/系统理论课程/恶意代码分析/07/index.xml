<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>07 on shesl-meow's note site</title><link>http://shesl-meow.github.io/docs/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/%E6%81%B6%E6%84%8F%E4%BB%A3%E7%A0%81%E5%88%86%E6%9E%90/07/</link><description>Recent content in 07 on shesl-meow's note site</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="http://shesl-meow.github.io/docs/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/%E6%81%B6%E6%84%8F%E4%BB%A3%E7%A0%81%E5%88%86%E6%9E%90/07/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>http://shesl-meow.github.io/docs/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/%E6%81%B6%E6%84%8F%E4%BB%A3%E7%A0%81%E5%88%86%E6%9E%90/07/lab7-1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://shesl-meow.github.io/docs/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/%E6%81%B6%E6%84%8F%E4%BB%A3%E7%A0%81%E5%88%86%E6%9E%90/07/lab7-1/</guid><description>lab 7-1 # QUESTION 1 # How does this program ensure that it continues running (achieves persistence) when the computer is restarted?
我们先分析这个程序的结构，查看 _main 函数的伪代码：
int __cdecl main(int argc, const char **argv, const char **envp) { SERVICE_TABLE_ENTRYA ServiceStartTable; // [sp+0h] [bp-10h]@1 int v5; // [sp+8h] [bp-8h]@1 int v6; // [sp+Ch] [bp-4h]@1 ServiceStartTable.lpServiceName = aMalservice; ServiceStartTable.lpServiceProc = (LPSERVICE_MAIN_FUNCTIONA)sub_401040; v5 = 0; v6 = 0; StartServiceCtrlDispatcherA(&amp;amp;ServiceStartTable); return sub_401040(0, 0, ServiceStartTable.</description></item><item><title/><link>http://shesl-meow.github.io/docs/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/%E6%81%B6%E6%84%8F%E4%BB%A3%E7%A0%81%E5%88%86%E6%9E%90/07/lab7-2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://shesl-meow.github.io/docs/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/%E6%81%B6%E6%84%8F%E4%BB%A3%E7%A0%81%E5%88%86%E6%9E%90/07/lab7-2/</guid><description>lab 7-2 # QUESTION 1 # How does this program achieve persistence?
我们同样的通过 _main 函数开始分析：
int __cdecl main(int argc, const char **argv, const char **envp) { OLECHAR *v3; // esi@3 LPVOID ppv; // [sp+0h] [bp-24h]@2 VARIANTARG pvarg; // [sp+4h] [bp-20h]@3 __int16 v7; // [sp+14h] [bp-10h]@3 int v8; // [sp+1Ch] [bp-8h]@3 if ( OleInitialize(0) &amp;gt;= 0 ) { CoCreateInstance(&amp;amp;rclsid, 0, 4u, &amp;amp;riid, &amp;amp;ppv); if ( ppv ) { VariantInit(&amp;amp;pvarg); v7 = 3; v8 = 1; v3 = SysAllocString(psz); (*(void (__stdcall **)(LPVOID, OLECHAR *, __int16 *, VARIANTARG *, VARIANTARG *, VARIANTARG *))(*(_DWORD *)ppv + 44))( ppv, v3, &amp;amp;v7, &amp;amp;pvarg, &amp;amp;pvarg, &amp;amp;pvarg); SysFreeString(v3); } OleUninitialize(); } return 0; } 查看被调用的所有函数，这个程序似乎并没有尝试永久地运行。</description></item><item><title/><link>http://shesl-meow.github.io/docs/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/%E6%81%B6%E6%84%8F%E4%BB%A3%E7%A0%81%E5%88%86%E6%9E%90/07/lab7-3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://shesl-meow.github.io/docs/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/%E6%81%B6%E6%84%8F%E4%BB%A3%E7%A0%81%E5%88%86%E6%9E%90/07/lab7-3/</guid><description>lab 7-3 # QUESTION 1 # How does this program achieve persistence to ensure that it continues running when the computer is restarted?
首先查看函数导入表，发现 Lab07-03.exe 这个文件有导入一个 CopyFileA 这个敏感函数。
然后我们分析这个可执行文件的伪代码。伪代码定义了大量局部变量后，先进行如下的判断：
if ( argc == 2 &amp;amp;&amp;amp; !strcmp(argv[1], aWarning_this_w) ) 该判断的作用是判断命令行参数长度是否为 2，第二个参数内容是否为 WARNING_THIS_WILL_DESTROY_YOUR_MACHINE。
以下几行的伪代码，通过查看 MSDN 的 API 函数介绍可以阅读其功能：
v3 = CreateFileA(FileName, 0x80000000, 1u, 0, 3u, 0, 0); hObject = v3; v4 = CreateFileMappingA(v3, 0, 2u, 0, 0, 0); v5 = (char *)MapViewOfFile(v4, 4u, 0, 0, 0); v6 = v5; argca = (int)v5; v7 = CreateFileA(ExistingFileName, 0x10000000u, 1u, 0, 3u, 0, 0); v50 = v7; if ( v7 == (HANDLE)-1 ) exit(0); v8 = CreateFileMappingA(v7, 0, 4u, 0, 0, 0); if ( v8 == (HANDLE)-1 ) exit(0); v9 = (const char **)MapViewOfFile(v8, 0xF001Fu, 0, 0, 0); argva = v9; if ( !</description></item></channel></rss>