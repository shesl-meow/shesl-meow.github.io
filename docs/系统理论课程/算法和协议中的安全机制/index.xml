<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>算法和协议中的安全机制 on shesl-meow's note site</title><link>http://shesl-meow.github.io/docs/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/%E7%AE%97%E6%B3%95%E5%92%8C%E5%8D%8F%E8%AE%AE%E4%B8%AD%E7%9A%84%E5%AE%89%E5%85%A8%E6%9C%BA%E5%88%B6/</link><description>Recent content in 算法和协议中的安全机制 on shesl-meow's note site</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="http://shesl-meow.github.io/docs/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/%E7%AE%97%E6%B3%95%E5%92%8C%E5%8D%8F%E8%AE%AE%E4%B8%AD%E7%9A%84%E5%AE%89%E5%85%A8%E6%9C%BA%E5%88%B6/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>http://shesl-meow.github.io/docs/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/%E7%AE%97%E6%B3%95%E5%92%8C%E5%8D%8F%E8%AE%AE%E4%B8%AD%E7%9A%84%E5%AE%89%E5%85%A8%E6%9C%BA%E5%88%B6/1.introduction/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://shesl-meow.github.io/docs/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/%E7%AE%97%E6%B3%95%E5%92%8C%E5%8D%8F%E8%AE%AE%E4%B8%AD%E7%9A%84%E5%AE%89%E5%85%A8%E6%9C%BA%E5%88%B6/1.introduction/</guid><description>Chapter 1. Introduction # Terminologies in this Class:
Confidentiality, Integrity, Authenticity etc. 安全三要素：保密性、完整性、认证性（真实性） Communication System Security # Communication system security is achieved in two aspects:
Make each node a trusted platform: robust hardware, validated system software, authorized applications. Protect communications on each link: mutual authentication, key establishment, cipher suite negotiation, failure detection. 课堂笔记 # Diffie-Hellman key exchange (DH) # 用于在两个终端之间共享一个私密的数字：
此时两个终端直接就共享了一个私密信息：$$\displaystyle g^{X_A X_B}\pmod{p}$$</description></item><item><title/><link>http://shesl-meow.github.io/docs/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/%E7%AE%97%E6%B3%95%E5%92%8C%E5%8D%8F%E8%AE%AE%E4%B8%AD%E7%9A%84%E5%AE%89%E5%85%A8%E6%9C%BA%E5%88%B6/2.prsg/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://shesl-meow.github.io/docs/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/%E7%AE%97%E6%B3%95%E5%92%8C%E5%8D%8F%E8%AE%AE%E4%B8%AD%E7%9A%84%E5%AE%89%E5%85%A8%E6%9C%BA%E5%88%B6/2.prsg/</guid><description>Chapter 2. Pseudorandom Sequence Generators # Background # We focus on the deterministic algorithm:
One is linear/non-linear feedback shift registers based on PRSGs. One relies on computation infeasible problems or other types of maths structure. Feedback Shift Register Sequence # Feedback shift register (反馈位移寄存器), denotes as FSR：
Introduction to FSR: feedback function $$a_{k+n} = f(a_k, a_{k+1}, \cdots, a_{k+n-1})$$
A state diagram of an FSR</description></item><item><title/><link>http://shesl-meow.github.io/docs/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/%E7%AE%97%E6%B3%95%E5%92%8C%E5%8D%8F%E8%AE%AE%E4%B8%AD%E7%9A%84%E5%AE%89%E5%85%A8%E6%9C%BA%E5%88%B6/3.streamciphers/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://shesl-meow.github.io/docs/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/%E7%AE%97%E6%B3%95%E5%92%8C%E5%8D%8F%E8%AE%AE%E4%B8%AD%E7%9A%84%E5%AE%89%E5%85%A8%E6%9C%BA%E5%88%B6/3.streamciphers/</guid><description>Chapter 3. Design of Stream Ciphers # Overview # Two phases in stream cipher:
key initialization phase.(KIA) PRSG running phase. Design princinple # Typical stream Ciphers # A5/1 in GSM # Cipher flow:
上图中，A5/1 部分就是基于一个密钥的随机数生成器，它主要由以下三个部分组成：
It uses three LFSRs generating m-sequences of large periods
which is: $$\displaystyle \begin{cases} f_1(x) = x^{19} + x^5 + x^2 + x + 1 \ f_2(x) = x^{22} + x + 1 \ f_3(x) = x^{23} + x^{16} + x^2 + x +1 \end{cases}$$</description></item><item><title/><link>http://shesl-meow.github.io/docs/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/%E7%AE%97%E6%B3%95%E5%92%8C%E5%8D%8F%E8%AE%AE%E4%B8%AD%E7%9A%84%E5%AE%89%E5%85%A8%E6%9C%BA%E5%88%B6/4.block_hash_mac/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://shesl-meow.github.io/docs/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/%E7%AE%97%E6%B3%95%E5%92%8C%E5%8D%8F%E8%AE%AE%E4%B8%AD%E7%9A%84%E5%AE%89%E5%85%A8%E6%9C%BA%E5%88%B6/4.block_hash_mac/</guid><description>Chapter 4. Design of Block Ciphers, Hash Functions, and MAC # Block Cipher # DES # DES stand for Data Encryption Standard.
Spectral properties of S-Box:
Hadamard transform: $$\displaystyle f(w) = \sum_{x \in F_2^n} (-1)^{f(x) + xw}$$ Avalanche transform: $$\displaystyle A(w) = \sum_{x \in F_2^n} (-1)^{f(x) + f(x + w)}$$ Triple-DES: $$C = E_{K_3} (D_{K_2} (E_{K_1}(M)))$$ or $$C = D_{K_3} (E_{K_2} (D_{K_1}(M)))$$
Encryption Modes:
Electronic Codebook (ECB) Mode =&amp;gt; Security risks.</description></item><item><title/><link>http://shesl-meow.github.io/docs/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/%E7%AE%97%E6%B3%95%E5%92%8C%E5%8D%8F%E8%AE%AE%E4%B8%AD%E7%9A%84%E5%AE%89%E5%85%A8%E6%9C%BA%E5%88%B6/5.publickey/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://shesl-meow.github.io/docs/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/%E7%AE%97%E6%B3%95%E5%92%8C%E5%8D%8F%E8%AE%AE%E4%B8%AD%E7%9A%84%E5%AE%89%E5%85%A8%E6%9C%BA%E5%88%B6/5.publickey/</guid><description>Chapter 5. Public-Key Cryptographic Algorithms # Security is based on the difficulty of some computational hard problems: factorization large integer, discrete algorithm.
Diffie-Hellman Key Exchange # 用于在两个终端之间共享一个私密的数字：
此时两个终端直接就共享了一个私密信息：$$\displaystyle g^{X_A X_B}\pmod{p}$$
RSA # RSA encrypt algorithm # RSA digital signature algorithm (RSA-DSA) # Signed message m:
Compute: $$H(m)$$ and $$r = (H(m))^d \pmod{n}$$
r is the digital signature of message m
Verify the digital signature r:</description></item><item><title/><link>http://shesl-meow.github.io/docs/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/%E7%AE%97%E6%B3%95%E5%92%8C%E5%8D%8F%E8%AE%AE%E4%B8%AD%E7%9A%84%E5%AE%89%E5%85%A8%E6%9C%BA%E5%88%B6/6.securityinfrastructure/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://shesl-meow.github.io/docs/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/%E7%AE%97%E6%B3%95%E5%92%8C%E5%8D%8F%E8%AE%AE%E4%B8%AD%E7%9A%84%E5%AE%89%E5%85%A8%E6%9C%BA%E5%88%B6/6.securityinfrastructure/</guid><description>Chapter 6. Security Infrastructure #</description></item><item><title/><link>http://shesl-meow.github.io/docs/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/%E7%AE%97%E6%B3%95%E5%92%8C%E5%8D%8F%E8%AE%AE%E4%B8%AD%E7%9A%84%E5%AE%89%E5%85%A8%E6%9C%BA%E5%88%B6/7.establishcommunication/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://shesl-meow.github.io/docs/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/%E7%AE%97%E6%B3%95%E5%92%8C%E5%8D%8F%E8%AE%AE%E4%B8%AD%E7%9A%84%E5%AE%89%E5%85%A8%E6%9C%BA%E5%88%B6/7.establishcommunication/</guid><description>Chapter 7. Establish Protect Communications #</description></item></channel></rss>