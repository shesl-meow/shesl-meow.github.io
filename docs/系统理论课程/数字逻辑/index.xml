<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>数字逻辑 on shesl-meow's note site</title><link>http://shesl-meow.github.io/docs/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91/</link><description>Recent content in 数字逻辑 on shesl-meow's note site</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="http://shesl-meow.github.io/docs/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>http://shesl-meow.github.io/docs/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91/%E5%8D%A1%E8%AF%BA%E5%9B%BE/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://shesl-meow.github.io/docs/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91/%E5%8D%A1%E8%AF%BA%E5%9B%BE/</guid><description>卡诺图 # n 个变量的卡诺图中最小项的合并规律如下：
卡诺图中小方格的个数必须为 $$2^m$$ 个（$$m \in \mathbb{Z}, m \le n$$） 卡诺圈中的 $$2^m$$ 个小方格有一定的排列规律，他们含有 m 个不同变量，（n-m）个相同变量。 卡诺圈中的 $$2^m$$ 个小方格对应的最小项可以用 （n-m）个变量的与项表示，该与项由这些最小项中的相同部分组成。 当 m = 0 时，卡诺圈包含一个最小项；当 m = n 时，卡诺圈包围了整个卡诺图，可用 1 表示.</description></item><item><title/><link>http://shesl-meow.github.io/docs/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91/%E5%8F%AF%E7%BC%96%E7%A8%8B%E9%80%BB%E8%BE%91%E5%99%A8%E4%BB%B6/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://shesl-meow.github.io/docs/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91/%E5%8F%AF%E7%BC%96%E7%A8%8B%E9%80%BB%E8%BE%91%E5%99%A8%E4%BB%B6/</guid><description>学习途径：
欧阳星明、华中科技大学出版社 《数字逻辑》 低密度可编程逻辑器件 # 可编程只读存储器 # 1. 半导体存储器分类 # 按功能分类可以分为随机存取存储器 RAM（Random Access Memory, RAM）和只读存储器 ROM（Read Only Memory）两大类。
RAM 是一种既可读又可写的存储器，故称为读写存储器。
优点是读写方便，使用灵活 缺点是一旦断点，所存储的信息便会丢失，它属于易失性存储器。 ROM 是一种在正常工作时只能读出、不能写入的存储器。
只读存储器存储属于的过程通常称为编程，根据编程方法的不同可以分为：掩膜编程 ROM（MROM）和用户可编程 ROM 两类。
只读存储器 ROM 属于非易失性存储器，即使切断电源，ROM 内的信息也不会丢失。
2. 可编程 ROM 的结构 # 可编程 ROM 主要由地址译码器和存储体两大部分组成：
其中：
$$A_0, A_1, &amp;hellip;, A_{n-1}$$ 称为地址输入线； $$W_0, W_1, &amp;hellip;, W_{2^n-1}$$ 称为地址译码输出线，一般称为字线； $$D_0, D_1, &amp;hellip;, D_{m-1}$$ 称为数据输出线，一般称为位线。 其实现方式，上半部分是一个与阵列构成的全地址译码器，下半部分是一个或阵列构成的网络：</description></item><item><title/><link>http://shesl-meow.github.io/docs/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91/%E5%90%8C%E6%AD%A5%E6%97%B6%E5%BA%8F%E9%80%BB%E8%BE%91%E7%94%B5%E8%B7%AF/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://shesl-meow.github.io/docs/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91/%E5%90%8C%E6%AD%A5%E6%97%B6%E5%BA%8F%E9%80%BB%E8%BE%91%E7%94%B5%E8%B7%AF/</guid><description>学习途径：
欧阳星明、华中科技大学出版社 《数字逻辑》 同步时序逻辑电路设计 # 设计的一般步骤：
完全确定同步时序逻辑电路设计 # 1. 形成原始状态图和原始状态表 # 一般步骤：
确定电路模型：Mealy 模型、Moore 模型。 设立初始状态 根据需要记忆的信息增加新的状态 确定各时刻电路的输出 例子：
设计一个模 5 可逆计数器，该电路有一个输入 x 和一个输出 Z。x=0 表示加控制信号，x=1 表示减控制信号。输出 Z 表示借位或进位信号。尝试建立该计数器的 Mealy 型原始状态图和状态表。
假设计数器的 5 个状态分别为 0、1、2、3、4，其中 0 表示初始状态。原始状态表如下所示：
当前状态 次态/输出 Z 次态/输出 Z x=0 x=1 0 1/0 4/1 1 2/0 0/0 2 3/0 1/0 3 4/0 2/0 4 0/1 3/0 2.</description></item><item><title/><link>http://shesl-meow.github.io/docs/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91/%E5%BC%82%E6%AD%A5%E6%97%B6%E5%BA%8F%E9%80%BB%E8%BE%91%E7%94%B5%E8%B7%AF/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://shesl-meow.github.io/docs/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91/%E5%BC%82%E6%AD%A5%E6%97%B6%E5%BA%8F%E9%80%BB%E8%BE%91%E7%94%B5%E8%B7%AF/</guid><description>学习途径：
欧阳星明、华中科技大学出版社 《数字逻辑》 异步时序逻辑电路 # 脉冲异步时序逻辑电路分析 # 分析步骤如下：
写出电路的输出函数和激励函数表达式 列出电路的次态真值表或次态方程组 作出状态表和状态图 画出时间图并用文字描述电路的逻辑功能 例子：
分析下图所示的脉冲异步时序逻辑电路，指出该电路的主要功能：
STEP 1：写出输出函数和激励函数表达式：
输出函数：$$Z = x \cdot y_2 \cdot y_1$$ JK1 激励函数：$$J_1=K_1=1, C_1 = x$$ JK2 激励函数：$$J_2=K_2=1, C_2 = y_1$$ STEP 2：列出电路的次态真值表或次态方程组：
由 STEP 1 中的分析可知，两个 JK 触发器均工作在计数状态，即恒有：$$Q^{n+1} = \overline{Q^n}$$。所以次态真值表（x=1）：
现态 现态 次态 次态 $$y_2$$ $$y_1$$ $$y_2^{n+1}$$ $$y_1^{n+1}$$ 0 0 0 1 0 1 1 0 1 0 1 1 1 1 0 0 STEP 3：做出状态表和状态图：</description></item><item><title/><link>http://shesl-meow.github.io/docs/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91/%E6%95%B0%E5%88%B6%E4%B8%8E%E7%BC%96%E7%A0%81/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://shesl-meow.github.io/docs/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91/%E6%95%B0%E5%88%B6%E4%B8%8E%E7%BC%96%E7%A0%81/</guid><description>学习途径：
欧阳星明、华中科技大学出版社 《数字逻辑》 数制与编码 # 数制与转换 # 广义的说，一种进位数制包含着基数和位权两个基本要素：
基数：是指计数制中所用到的数字符号的个数。基数为 R 的计数制称为 R 进位计数制，简称 R 进制。
位权：在一种进位计数制表示的数中，用来表示不同数位上数值大小的一个固定常数。
一般来说，一个 R 进制数 N 可以有以下两种表示方法：
并列表示法，又称为位置计数法，其表达式为：$$(N)R = (K{n-1}K_{n-2}&amp;hellip;K_1K_0 . K_{-1}&amp;hellip;K_{-m})_R$$ 多项式表示法，又称按权展开法，其表达式为：$$\displaystyle (N)R = \sum{i=-m}^{n-1} K_iR^i$$ 带符号二进制数的表示 # 原码 # 二进制小数 $$X = \pm 0.x_{-1}x_{-2}&amp;hellip;x_{-m}​$$，原码定义为：$$\displaystyle [X]_{原} = \begin{cases} X &amp;amp;, 0 \le X &amp;lt; 1 \ 1 - X &amp;amp;, -1 &amp;lt; X \le 0\end{cases}​$$</description></item><item><title/><link>http://shesl-meow.github.io/docs/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91/%E8%A7%A6%E5%8F%91%E5%99%A8/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://shesl-meow.github.io/docs/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91/%E8%A7%A6%E5%8F%91%E5%99%A8/</guid><description>学习地址：http://210.45.192.19/kecheng/2004/11/courseware/chapter4.ppt
触发器 # 分类 # 按动作特点分类：基本 RS 触发器、同步 RS 触发器、主从触发器、边沿触发器
按功能分类：RS 触发器、JK 触发器、D 触发器、T 触发器
1. 基本 RS 触发器 # 1.1 电路结构 # 1.2 动作特点 # 功能表：
R S Qn+1 功 能 0 0 ╳ 不 定 0 1 0 置 “0” 1 0 1 置 “1” 1 1 Qn 保 持 $$Q_{n+1}$$ 卡诺图：</description></item></channel></rss>