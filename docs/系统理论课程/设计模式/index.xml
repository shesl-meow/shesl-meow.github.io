<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>DesignPatterns on shesl-meow's note site</title><link>http://shesl-meow.github.io/docs/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</link><description>Recent content in DesignPatterns on shesl-meow's note site</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="http://shesl-meow.github.io/docs/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>http://shesl-meow.github.io/docs/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/reactor%E6%A8%A1%E5%BC%8F/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://shesl-meow.github.io/docs/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/reactor%E6%A8%A1%E5%BC%8F/</guid><description>Reactor 模式 # 一个网络连接对应于一个线程处理，是最原始的 Web 应用模型：
但是这种模型对每个连接都创造一个 handler 容易遇到瓶颈，负载增加时性能下降非常快：
accept 方法会阻塞等待 client 连接，直到 client 连接成功； read 方法从 socket inputstream 读取数据，会阻塞线程直到完成数据读取； write 方法会写入输入到 socket outstream，会阻塞线程直到数据写完； 上面列举的三种方法的特点是：都是引起 IO 的阻塞方法，这种原始的应用模式会导致大量线程空转。使用一个中心的 Reactor 来处理所有会引起阻塞的方法，就是 Reactor 模式：
而上面这种设计模式，Reactor 运行在单线程中，容易成为高并发计算机系统的性能瓶颈。
于是我们可以用一个线程池处理已经连接的所有客户端：
在多 CPU 的机器上 Reactor 又可以拆分成 mainReactor 和 subReactor：</description></item><item><title/><link>http://shesl-meow.github.io/docs/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/uml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://shesl-meow.github.io/docs/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/uml/</guid><description>示例 # classDiagram 继承 &amp;lt;|-- Inheritance 组成 *-- Composition 聚合 o-- Aggregation 关联 &amp;lt;-- Association 链接 -- Link Solid 依赖 &amp;lt;.. Dependency 实现 &amp;lt;|.. Realization</description></item></channel></rss>