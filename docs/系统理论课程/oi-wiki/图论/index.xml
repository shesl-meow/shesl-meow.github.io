<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>图论 on shesl-meow's note site</title><link>http://shesl-meow.github.io/docs/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/oi-wiki/%E5%9B%BE%E8%AE%BA/</link><description>Recent content in 图论 on shesl-meow's note site</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="http://shesl-meow.github.io/docs/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/oi-wiki/%E5%9B%BE%E8%AE%BA/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>http://shesl-meow.github.io/docs/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/oi-wiki/%E5%9B%BE%E8%AE%BA/tarjan/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://shesl-meow.github.io/docs/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/oi-wiki/%E5%9B%BE%E8%AE%BA/tarjan/</guid><description>图论 # Tarjan # 实现 # Tarjan&amp;rsquo;s algorithm 是一个用于求解无向图割点与桥的算法。直接上代码：
void tarjan(int u, int v) { /* compute dfn and low while performing a dfs search - beginning at vertex u, v is the parent of u (if any) */ nodePointer ptr; int w; dfn[u] = low[u] = num++; for (ptr = graph[u]; ptr; ptr = ptr-&amp;gt;link) { w = ptr-&amp;gt;vertex; if (dfn[w] &amp;lt; 0) { /* w is an unvisited vertex */ tarjan(w,u); low[u] = min(low[u],low[w]); } else if (w !</description></item></channel></rss>