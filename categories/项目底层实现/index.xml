<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>项目底层实现 - 分类 - shesl's blog</title><link>http://shesl-meow.github.io/categories/%E9%A1%B9%E7%9B%AE%E5%BA%95%E5%B1%82%E5%AE%9E%E7%8E%B0/</link><description>项目底层实现 - 分类 - shesl's blog</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>shesl-meow@qq.com (佘崧林)</managingEditor><webMaster>shesl-meow@qq.com (佘崧林)</webMaster><lastBuildDate>Sun, 29 May 2022 00:00:49 +0800</lastBuildDate><atom:link href="http://shesl-meow.github.io/categories/%E9%A1%B9%E7%9B%AE%E5%BA%95%E5%B1%82%E5%AE%9E%E7%8E%B0/" rel="self" type="application/rss+xml"/><item><title>faiss</title><link>http://shesl-meow.github.io/note/%E9%A1%B9%E7%9B%AE%E5%BA%95%E5%B1%82%E5%AE%9E%E7%8E%B0/faiss/</link><pubDate>Sun, 29 May 2022 00:00:49 +0800</pubDate><author>佘崧林</author><guid>http://shesl-meow.github.io/note/%E9%A1%B9%E7%9B%AE%E5%BA%95%E5%B1%82%E5%AE%9E%E7%8E%B0/faiss/</guid><description>1. 项目目的、框架、文件结构、接口 简介： faiss 全称 Facebook AI Similarity Search； 它用于对海量高维数据，在很短的时间内进行邻近点的计算； 它的 Github 开源地址：htt</description></item><item><title>RPC 框架 Archon 学习</title><link>http://shesl-meow.github.io/note/%E9%A1%B9%E7%9B%AE%E5%BA%95%E5%B1%82%E5%AE%9E%E7%8E%B0/archon/</link><pubDate>Sat, 30 Apr 2022 21:33:23 +0800</pubDate><author>佘崧林</author><guid>http://shesl-meow.github.io/note/%E9%A1%B9%E7%9B%AE%E5%BA%95%E5%B1%82%E5%AE%9E%E7%8E%B0/archon/</guid><description>线程模型 四个独立线程池： Accept 线程池：接受网络请求、accept 方法的线程； IO 线程池：每个线程对应一个 folly::Eventbase，所有与I</description></item><item><title>Elf Sections</title><link>http://shesl-meow.github.io/note/%E9%A1%B9%E7%9B%AE%E5%BA%95%E5%B1%82%E5%AE%9E%E7%8E%B0/linux%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB/elfsections/</link><pubDate>Thu, 29 Aug 2019 22:27:32 +0800</pubDate><author>佘崧林</author><guid>http://shesl-meow.github.io/note/%E9%A1%B9%E7%9B%AE%E5%BA%95%E5%B1%82%E5%AE%9E%E7%8E%B0/linux%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB/elfsections/</guid><description>参考： https://linux-audit.com/elf-binaries-on-linux-understanding-and-analysis/ https://lief.quarkslab.com/doc/stable/tutorials/05_elf_infect_plt_got.html http://blog.k3170makan.com/2018/10/introduction-to-elf-format-part-v.html http://dbp-consulting.com/tutorials/debugging/linuxProgramStartup.html https://stackoverflow.com/questions/34966097/what-functions-does-gcc-add-to-the-linux-elf 常见节 我们分析以下几个比较重要的节头： .text：该段包含的是可执行代码，该段中的数据只可读不可写，该段中的数据只加载一次。</description></item><item><title>Tcache</title><link>http://shesl-meow.github.io/note/%E9%A1%B9%E7%9B%AE%E5%BA%95%E5%B1%82%E5%AE%9E%E7%8E%B0/linux%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB/glibctcache/</link><pubDate>Tue, 20 Aug 2019 18:14:38 +0800</pubDate><author>佘崧林</author><guid>http://shesl-meow.github.io/note/%E9%A1%B9%E7%9B%AE%E5%BA%95%E5%B1%82%E5%AE%9E%E7%8E%B0/linux%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB/glibctcache/</guid><description>参考资料： http://p4nda.top/2018/03/20/tcache/ https://ctf-wiki.github.io/ctf-wiki/pwn/linux/glibc-heap/tcache_attack-zh/ 介绍 tcache，全称是 thread local caching，是 libc 2.26 版本中新增加的内存管理机制，属于一种用于加速 malloc 分配的缓存机制。 它由 64 个链表组</description></item><item><title>堆基础</title><link>http://shesl-meow.github.io/note/%E9%A1%B9%E7%9B%AE%E5%BA%95%E5%B1%82%E5%AE%9E%E7%8E%B0/linux%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB/glibcheap/</link><pubDate>Fri, 02 Aug 2019 23:45:34 +0800</pubDate><author>佘崧林</author><guid>http://shesl-meow.github.io/note/%E9%A1%B9%E7%9B%AE%E5%BA%95%E5%B1%82%E5%AE%9E%E7%8E%B0/linux%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB/glibcheap/</guid><description>参考：长亭科技堆的概念 堆的一些特点： 堆是可以根据运行时的需要进行动态分配和释放的内存，大小可变； 堆的实现重点关注内存块的组织和管理方式（尤其</description></item><item><title>ELF Format</title><link>http://shesl-meow.github.io/note/%E9%A1%B9%E7%9B%AE%E5%BA%95%E5%B1%82%E5%AE%9E%E7%8E%B0/linux%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB/elfformat/</link><pubDate>Thu, 01 Aug 2019 17:01:00 +0800</pubDate><author>佘崧林</author><guid>http://shesl-meow.github.io/note/%E9%A1%B9%E7%9B%AE%E5%BA%95%E5%B1%82%E5%AE%9E%E7%8E%B0/linux%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB/elfformat/</guid><description>参考： https://linux-audit.com/elf-binaries-on-linux-understanding-and-analysis/ ELF is the abbreviation for Executable and Linkable Format and defines the structure for binaries, libraries, and core files. The formal specification allows the operating system to interpreter its underlying machine instructions correctly. ELF files are typically the output of a compiler or linker and are a binary format. With the right tools, such file can be analyzed and better understood. Elf Anatomy Due to the</description></item></channel></rss>