<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>操作系统 - 分类 - shesl's blog</title><link>http://shesl-meow.github.io/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/</link><description>操作系统 - 分类 - shesl's blog</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>shesl-meow@qq.com (佘崧林)</managingEditor><webMaster>shesl-meow@qq.com (佘崧林)</webMaster><lastBuildDate>Sat, 18 Jan 2020 19:46:00 +0800</lastBuildDate><atom:link href="http://shesl-meow.github.io/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/" rel="self" type="application/rss+xml"/><item><title>期末复习</title><link>http://shesl-meow.github.io/note/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/</link><pubDate>Sat, 18 Jan 2020 19:46:00 +0800</pubDate><author>佘崧林</author><guid>http://shesl-meow.github.io/note/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/</guid><description>概念 快表，TLB（Translation Look-aside Buffer）： 反置页表 缺页中断 缺页中断的处理流程： 在内存中有空闲物理页面时，分配一物理页帧 f，转</description></item><item><title>exe0</title><link>http://shesl-meow.github.io/note/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/homework/lab3/exe0/</link><pubDate>Tue, 03 Dec 2019 13:41:00 +0800</pubDate><author>佘崧林</author><guid>http://shesl-meow.github.io/note/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/homework/lab3/exe0/</guid><description>同 lab2： 导出 change： 1 $ git diff 7ca90137c09c54f5afa9b87a35a68d9f65ecef52 HEAD labcodes/lab2/ | sed &amp;#39;s/lab2/lab3/g&amp;#39; &amp;gt; lab3/exe0.patch 进行 merge： 1 $ git apply lab3/exe0.patch</description></item><item><title>exe0</title><link>http://shesl-meow.github.io/note/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/homework/lab4/exe0/</link><pubDate>Tue, 03 Dec 2019 13:41:00 +0800</pubDate><author>佘崧林</author><guid>http://shesl-meow.github.io/note/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/homework/lab4/exe0/</guid><description>同 lab2： 导出 change： 1 $ git diff 776bc9ece6f0f887962603c0eadf779d1443ecbd HEAD labcodes/lab3/ | sed &amp;#39;s/lab3/lab4/g&amp;#39; &amp;gt; lab4/exe0.patch 进行 merge： 1 $ git apply lab4/exe0.patch</description></item><item><title>exe1</title><link>http://shesl-meow.github.io/note/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/homework/lab4/exe1/</link><pubDate>Tue, 03 Dec 2019 13:41:00 +0800</pubDate><author>佘崧林</author><guid>http://shesl-meow.github.io/note/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/homework/lab4/exe1/</guid><description>代码 alloc_proc 函数（位于 kern/process/proc.c 中）负责分配并返回一个新的 struct proc_struct 结构，用于存储新建立的内核线程的管理信息。ucore 需要对这个结构进行最基本的初始化，你需要</description></item><item><title>exe1.md</title><link>http://shesl-meow.github.io/note/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/homework/lab3/exe1/</link><pubDate>Tue, 03 Dec 2019 13:41:00 +0800</pubDate><author>佘崧林</author><guid>http://shesl-meow.github.io/note/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/homework/lab3/exe1/</guid><description>如果ucore的缺页服务例程在执行过程中访问内存,出现了页访问异常,请问硬件要做哪 些事情? 将产生页访问异常的线性地址存入 cr2 寄存器中 并且给出 错</description></item><item><title>exe2</title><link>http://shesl-meow.github.io/note/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/homework/lab3/exe2/</link><pubDate>Tue, 03 Dec 2019 13:41:00 +0800</pubDate><author>佘崧林</author><guid>http://shesl-meow.github.io/note/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/homework/lab3/exe2/</guid><description>代码 _fifo_map_swappable FIFA 算法需要将最近使用过的页链接在链表的头部。 看注释，这个函数是要将刚刚使用过的 page 放在链表的第二个元素。程序已经将链表和元素都选取出来了</description></item><item><title>exe2</title><link>http://shesl-meow.github.io/note/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/homework/lab2/exe2/</link><pubDate>Sun, 24 Nov 2019 22:24:42 +0800</pubDate><author>佘崧林</author><guid>http://shesl-meow.github.io/note/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/homework/lab2/exe2/</guid><description>概述 通过设置页表和对应的页表项，可建立虚拟内存地址和物理内存地址的对应关系。其中的 get_pte 函数是设置页表项环节中的一个重要步骤。此函数找到一个虚地</description></item><item><title>分页技术</title><link>http://shesl-meow.github.io/note/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E5%AE%9E%E9%AA%8C%E9%A1%B9%E7%9B%AE%E7%BB%84%E6%88%90/%E5%88%86%E9%A1%B5%E6%8A%80%E6%9C%AF/</link><pubDate>Sun, 24 Nov 2019 22:24:42 +0800</pubDate><author>佘崧林</author><guid>http://shesl-meow.github.io/note/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E5%AE%9E%E9%AA%8C%E9%A1%B9%E7%9B%AE%E7%BB%84%E6%88%90/%E5%88%86%E9%A1%B5%E6%8A%80%E6%9C%AF/</guid><description>参考： https://stackoverflow.com/questions/29945171/difference-between-page-table-and-page-directory 设计 下面一张图可以展示分页技术的层级设计过程： 概念 页 (Page)： 在进程的逻辑地址中，一段连续地址的集合。 页的大小一般提供三种规格：</description></item><item><title>exe0</title><link>http://shesl-meow.github.io/note/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/homework/lab2/exe0/</link><pubDate>Tue, 12 Nov 2019 18:50:46 +0800</pubDate><author>佘崧林</author><guid>http://shesl-meow.github.io/note/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/homework/lab2/exe0/</guid><description>概述 首先我们看看 lab1 与 lab2 的代码有什么不同： 在 ucore_os_lab 这个项目中添加不同的 repo，用以回滚到最原始的版本： 1 2 3 4 5 6 7 8 9 10 11 $ git remote -v origin https://github.com/chyyuu/ucore_os_lab.git (fetch) origin https://github.com/chyyuu/ucore_os_lab.git (push)</description></item><item><title>exe5</title><link>http://shesl-meow.github.io/note/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/homework/lab1/exe5/</link><pubDate>Mon, 14 Oct 2019 22:00:15 +0800</pubDate><author>佘崧林</author><guid>http://shesl-meow.github.io/note/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/homework/lab1/exe5/</guid><description>程序思路：函数kern/debug/kdebug.c::print_stackframe的注释写的很清楚了，先调用read_ebp(),re</description></item></channel></rss>