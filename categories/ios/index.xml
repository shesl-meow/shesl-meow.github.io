<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>IOS - 分类 - shesl's blog</title><link>http://shesl-meow.github.io/categories/ios/</link><description>IOS - 分类 - shesl's blog</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>shesl-meow@qq.com (佘崧林)</managingEditor><webMaster>shesl-meow@qq.com (佘崧林)</webMaster><lastBuildDate>Sat, 27 Mar 2021 22:45:35 +0800</lastBuildDate><atom:link href="http://shesl-meow.github.io/categories/ios/" rel="self" type="application/rss+xml"/><item><title>函数与结构</title><link>http://shesl-meow.github.io/note/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8%E6%8E%A5%E5%8F%A3/ios/swiftsdk/3.%E5%87%BD%E6%95%B0%E4%B8%8E%E7%BB%93%E6%9E%84/</link><pubDate>Sat, 27 Mar 2021 22:45:35 +0800</pubDate><author>佘崧林</author><guid>http://shesl-meow.github.io/note/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8%E6%8E%A5%E5%8F%A3/ios/swiftsdk/3.%E5%87%BD%E6%95%B0%E4%B8%8E%E7%BB%93%E6%9E%84/</guid><description>函数 Swift 使用一个统一的语法来表示简单的 C 语言风格的函数到复杂的 Objective-C 语言风格的方法。 函数定义：func 1 2 3 func runoob(site: String) -&amp;gt; String { return (site) } 函数调用： 1 print(runoob(site: &amp;#34;www.runoob.com&amp;#34;)) 函数</description></item><item><title>基本语法</title><link>http://shesl-meow.github.io/note/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8%E6%8E%A5%E5%8F%A3/ios/swiftsdk/1.%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/</link><pubDate>Sat, 05 Dec 2020 00:24:37 +0800</pubDate><author>佘崧林</author><guid>http://shesl-meow.github.io/note/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8%E6%8E%A5%E5%8F%A3/ios/swiftsdk/1.%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/</guid><description>符号概念 引入 Swift 中的引入关键字是 import。 值得注意的是，这个语句可以用来引入任何 Objective-C/C 的库到 Swift 程序中来。 分号 Swift 不要求在每行语句的结尾使用分号。</description></item><item><title>问题记录</title><link>http://shesl-meow.github.io/note/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8%E6%8E%A5%E5%8F%A3/ios/swiftsdk/%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/</link><pubDate>Sat, 05 Dec 2020 00:24:37 +0800</pubDate><author>佘崧林</author><guid>http://shesl-meow.github.io/note/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8%E6%8E%A5%E5%8F%A3/ios/swiftsdk/%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/</guid><description>可选项遵照 LogicValue 协议，因此可以出现在布尔环境中。在这种情况下，如果可选类型 T? 包含类型为 T 的任何值（也就是说它的值是 Optional.Some(T) ），这个可选类型等于 true</description></item><item><title>11.RunLoop.md</title><link>http://shesl-meow.github.io/note/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8%E6%8E%A5%E5%8F%A3/ios/objective-csdk/11.runloop/</link><pubDate>Thu, 25 Jun 2020 16:08:55 +0800</pubDate><author>佘崧林</author><guid>http://shesl-meow.github.io/note/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8%E6%8E%A5%E5%8F%A3/ios/objective-csdk/11.runloop/</guid><description>参考： https://stackoverflow.com/questions/7222449/nsdefaultrunloopmode-vs-nsrunloopcommonmodes https://hit-alibaba.github.io/interview/iOS/ObjC-Basic/Runloop.html https://blog.ibireme.com/2015/05/18/runloop/ 官方文档： https://developer.apple.com/documentation/foundation/nsrunloop?language=objc</description></item><item><title>Method Swizzling</title><link>http://shesl-meow.github.io/note/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8%E6%8E%A5%E5%8F%A3/ios/runtime/swizzling/</link><pubDate>Thu, 25 Jun 2020 16:08:55 +0800</pubDate><author>佘崧林</author><guid>http://shesl-meow.github.io/note/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8%E6%8E%A5%E5%8F%A3/ios/runtime/swizzling/</guid><description></description></item><item><title>CPU&amp;GPU.md</title><link>http://shesl-meow.github.io/note/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8%E6%8E%A5%E5%8F%A3/ios/%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/cpugpu/</link><pubDate>Fri, 20 Mar 2020 22:36:11 +0800</pubDate><author>佘崧林</author><guid>http://shesl-meow.github.io/note/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8%E6%8E%A5%E5%8F%A3/ios/%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/cpugpu/</guid><description>参考： https://juejin.im/post/5ace078cf265da23994ee493#heading-2 https://www.zhihu.com/question/29163054 https://www.jianshu.com/p/f62e81b72bba CPU &amp;amp; GPU 图形学概念 光栅化（Rasterize / Rasteriztion）： 就是把矢量图形转化成像素点儿的过程。 着色器（Shader</description></item><item><title>数组与字典</title><link>http://shesl-meow.github.io/note/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8%E6%8E%A5%E5%8F%A3/ios/objective-csdk/10.%E6%95%B0%E7%BB%84%E4%B8%8E%E5%AD%97%E5%85%B8/</link><pubDate>Fri, 20 Mar 2020 22:36:11 +0800</pubDate><author>佘崧林</author><guid>http://shesl-meow.github.io/note/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8%E6%8E%A5%E5%8F%A3/ios/objective-csdk/10.%E6%95%B0%E7%BB%84%E4%B8%8E%E5%AD%97%E5%85%B8/</guid><description>参考：https://github.com/ming1016/study/wiki/iOS基础集合类 NSArray/NSMutableArray 基本使用 定义、初始化一个 NSArray</description></item><item><title>优化方案.md</title><link>http://shesl-meow.github.io/note/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8%E6%8E%A5%E5%8F%A3/ios/%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/%E4%BC%98%E5%8C%96%E6%96%B9%E6%A1%88/</link><pubDate>Fri, 20 Mar 2020 22:36:11 +0800</pubDate><author>佘崧林</author><guid>http://shesl-meow.github.io/note/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8%E6%8E%A5%E5%8F%A3/ios/%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/%E4%BC%98%E5%8C%96%E6%96%B9%E6%A1%88/</guid><description>参考： https://github.com/ming1016/study/wiki/iOS性能优化 https://juejin.im/post/5ace078cf265da23994ee493#heading-7 优化方案 UITableView 缓存池存储 cell，复用 cel</description></item><item><title>NSObject</title><link>http://shesl-meow.github.io/note/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8%E6%8E%A5%E5%8F%A3/ios/runtime/2.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</link><pubDate>Sun, 15 Dec 2019 11:04:38 +0800</pubDate><author>佘崧林</author><guid>http://shesl-meow.github.io/note/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8%E6%8E%A5%E5%8F%A3/ios/runtime/2.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</guid><description>参考： https://halfrost.com/objc_runtime_isa_class/ http://www.cocoawithlove.com/2010/01/what-is-meta-class-in-objective-c.html https://draveness.me/method-struct NSObject 协议中定义的多种方法，是 OC 代码与 Runtime 发生交互的重要位置。 NSObject 基类 这个类与 NSObject 协议定义在了一个文件 Public Headers/NSObjects.h 中： 1 2 3 4 5 OBJC_ROOT_CLASS OBJC_EXPORT @interface NSObject &amp;lt;NSObject&amp;gt; { Class isa OBJC_ISA_AVAILABILITY;</description></item><item><title>编译结果</title><link>http://shesl-meow.github.io/note/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8%E6%8E%A5%E5%8F%A3/ios/runtime/3.%E7%BC%96%E8%AF%91%E7%BB%93%E6%9E%9C/</link><pubDate>Sun, 15 Dec 2019 11:04:38 +0800</pubDate><author>佘崧林</author><guid>http://shesl-meow.github.io/note/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8%E6%8E%A5%E5%8F%A3/ios/runtime/3.%E7%BC%96%E8%AF%91%E7%BB%93%E6%9E%9C/</guid><description>参考资料： 深入剖析-iOS-编译-Clang&amp;mdash;LLVM https://kingcos.me/posts/2019/objects_in_obj-c/ clang 我们都知道 Objective-C 是 C++ 的超集。Objetive-C 的代码在编译阶段，先会 clang 被</description></item></channel></rss>