<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>恶意代码分析 - 分类 - shesl's blog</title><link>http://shesl-meow.github.io/categories/%E6%81%B6%E6%84%8F%E4%BB%A3%E7%A0%81%E5%88%86%E6%9E%90/</link><description>恶意代码分析 - 分类 - shesl's blog</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>shesl-meow@qq.com (佘崧林)</managingEditor><webMaster>shesl-meow@qq.com (佘崧林)</webMaster><lastBuildDate>Wed, 10 Jul 2019 19:43:10 +0800</lastBuildDate><atom:link href="http://shesl-meow.github.io/categories/%E6%81%B6%E6%84%8F%E4%BB%A3%E7%A0%81%E5%88%86%E6%9E%90/" rel="self" type="application/rss+xml"/><item><title>lab 9-2</title><link>http://shesl-meow.github.io/note/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/%E6%81%B6%E6%84%8F%E4%BB%A3%E7%A0%81%E5%88%86%E6%9E%90/09/lab9-2/</link><pubDate>Wed, 10 Jul 2019 19:43:10 +0800</pubDate><author>佘崧林</author><guid>http://shesl-meow.github.io/note/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/%E6%81%B6%E6%84%8F%E4%BB%A3%E7%A0%81%E5%88%86%E6%9E%90/09/lab9-2/</guid><description>QUESTION 1 What strings do you see statically in the binary? 首先使用 PEexplorer 中的反汇编功能查看其中的 .rdata 段： QUESTION 2 What happens when you run this binary? 运行程序，没有任何反应。 使用 Process Monitor 查看，存在一些文件和注册表操</description></item><item><title>lab 9-1</title><link>http://shesl-meow.github.io/note/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/%E6%81%B6%E6%84%8F%E4%BB%A3%E7%A0%81%E5%88%86%E6%9E%90/09/lab9-1/</link><pubDate>Wed, 19 Jun 2019 16:39:55 +0800</pubDate><author>佘崧林</author><guid>http://shesl-meow.github.io/note/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/%E6%81%B6%E6%84%8F%E4%BB%A3%E7%A0%81%E5%88%86%E6%9E%90/09/lab9-1/</guid><description>QUESTION 1 How can you get this malware to install itself? 在 BinaryCollection/ 文件夹下运行 diff 命令可以查看两个文件之间的差异： 1 2 $ diff Chapter_9L/Lab09-01.exe Chapter_3L/Lab03-04.exe # 没有返回值说明这两个文件没有任何不同 我们发现 Lab09-01.exe 与 Lab03-04.exe 是同</description></item><item><title>lab 4-1</title><link>http://shesl-meow.github.io/note/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/%E6%81%B6%E6%84%8F%E4%BB%A3%E7%A0%81%E5%88%86%E6%9E%90/04/lab4-1/</link><pubDate>Mon, 10 Jun 2019 04:41:10 +0800</pubDate><author>佘崧林</author><guid>http://shesl-meow.github.io/note/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/%E6%81%B6%E6%84%8F%E4%BB%A3%E7%A0%81%E5%88%86%E6%9E%90/04/lab4-1/</guid><description><![CDATA[用 IDA pro 打开文件： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 int __cdecl main_0(int argc, const char **argv) { int result; // eax if ( argc == 2 ) { if ( !j_strcmp(argv[1], &#34;topsecret&#34;) ) printf(&#34;You found the password! Congratulations!\n&#34;); else printf(&#34;Fail!\n&#34;); result = 0; } else { printf(&#34;Usage: crackme-123-1 password\n&#34;); result = 1;]]></description></item><item><title>Lab 4-2</title><link>http://shesl-meow.github.io/note/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/%E6%81%B6%E6%84%8F%E4%BB%A3%E7%A0%81%E5%88%86%E6%9E%90/04/lab4-2/</link><pubDate>Mon, 10 Jun 2019 04:41:10 +0800</pubDate><author>佘崧林</author><guid>http://shesl-meow.github.io/note/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/%E6%81%B6%E6%84%8F%E4%BB%A3%E7%A0%81%E5%88%86%E6%9E%90/04/lab4-2/</guid><description><![CDATA[用 IDA pro 打开文件，分析伪代码： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 int __cdecl main_0(int argc, const char **argv) { int result; // eax if ( argc == 2 ) { if ( !j_strcmp(argv[1], &#34;alligator&#34;) ) printf(&#34;You found the password! Congratulations!\n&#34;); else printf(&#34;Fail!\n&#34;); result = 0; } else {]]></description></item><item><title>Lab 4-3</title><link>http://shesl-meow.github.io/note/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/%E6%81%B6%E6%84%8F%E4%BB%A3%E7%A0%81%E5%88%86%E6%9E%90/04/lab4-3/</link><pubDate>Mon, 10 Jun 2019 04:41:10 +0800</pubDate><author>佘崧林</author><guid>http://shesl-meow.github.io/note/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/%E6%81%B6%E6%84%8F%E4%BB%A3%E7%A0%81%E5%88%86%E6%9E%90/04/lab4-3/</guid><description>还是用 IDA pro 分析，得到伪代码： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 signed int __cdecl main_0(int a1, int a2) { signed int result; // eax if ( a1 == 3 ) { if ( !j_strcmp(*(const char **)(a2 + 4), &amp;#34;suffering&amp;#34;) )</description></item><item><title>Lab 4-4</title><link>http://shesl-meow.github.io/note/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/%E6%81%B6%E6%84%8F%E4%BB%A3%E7%A0%81%E5%88%86%E6%9E%90/04/lab4-4/</link><pubDate>Mon, 10 Jun 2019 04:41:10 +0800</pubDate><author>佘崧林</author><guid>http://shesl-meow.github.io/note/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/%E6%81%B6%E6%84%8F%E4%BB%A3%E7%A0%81%E5%88%86%E6%9E%90/04/lab4-4/</guid><description>又是用 IDA pro 分析文件，得到： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 signed int __cdecl main_0(int a1, const char **a2) { signed int result; // eax if ( a1 == 2 ) { if ( !j_strcmp(*a2, &amp;#34;game3.exe&amp;#34;) ) { if ( !j_strcmp(a2[1],</description></item><item><title>lab 5-1</title><link>http://shesl-meow.github.io/note/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/%E6%81%B6%E6%84%8F%E4%BB%A3%E7%A0%81%E5%88%86%E6%9E%90/05/lab5-1/</link><pubDate>Mon, 10 Jun 2019 04:41:10 +0800</pubDate><author>佘崧林</author><guid>http://shesl-meow.github.io/note/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/%E6%81%B6%E6%84%8F%E4%BB%A3%E7%A0%81%E5%88%86%E6%9E%90/05/lab5-1/</guid><description>QUESTION 1 What is the address of DllMain? 我们用 Ida Pro 加载这个动态链接库，在左侧的函数窗口点击 Ctrl+F，输入函数名 DLLMain，即可搜索： 可见其入口地址是 .tex</description></item><item><title>lab 6-1</title><link>http://shesl-meow.github.io/note/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/%E6%81%B6%E6%84%8F%E4%BB%A3%E7%A0%81%E5%88%86%E6%9E%90/06/lab6-1/</link><pubDate>Mon, 10 Jun 2019 04:41:10 +0800</pubDate><author>佘崧林</author><guid>http://shesl-meow.github.io/note/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/%E6%81%B6%E6%84%8F%E4%BB%A3%E7%A0%81%E5%88%86%E6%9E%90/06/lab6-1/</guid><description>QUESTION 1 What is the major code construct found in the only subroutine called by main? 在左侧的函数列表中选择 _main ，然后在右侧可以看到 _main 函数的汇编代码： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23</description></item><item><title>lab 6-2</title><link>http://shesl-meow.github.io/note/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/%E6%81%B6%E6%84%8F%E4%BB%A3%E7%A0%81%E5%88%86%E6%9E%90/06/lab6-2/</link><pubDate>Mon, 10 Jun 2019 04:41:10 +0800</pubDate><author>佘崧林</author><guid>http://shesl-meow.github.io/note/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/%E6%81%B6%E6%84%8F%E4%BB%A3%E7%A0%81%E5%88%86%E6%9E%90/06/lab6-2/</guid><description>QUESTION 1 What operation does the first subroutine called by main perform? 查看 _main 的汇编代码： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 .text:00401130 ; =============== S U B R O U T I N E ======================================= .text:00401130 .text:00401130 ; Attributes: bp-based frame .text:00401130 .text:00401130 ; int __cdecl main(int argc, const char **argv, const</description></item><item><title>lab 6-3</title><link>http://shesl-meow.github.io/note/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/%E6%81%B6%E6%84%8F%E4%BB%A3%E7%A0%81%E5%88%86%E6%9E%90/06/lab6-3/</link><pubDate>Mon, 10 Jun 2019 04:41:10 +0800</pubDate><author>佘崧林</author><guid>http://shesl-meow.github.io/note/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/%E6%81%B6%E6%84%8F%E4%BB%A3%E7%A0%81%E5%88%86%E6%9E%90/06/lab6-3/</guid><description>QUESTION 1 Compare the calls in main to Lab 6-2’s main method. What is the new function called from main? 后面多出了 sub_401130 这个函数。 QUESTION 2 What parameters does this new function take? Ida Pro 将函数声明生成了以下的伪代码： 1 int __cdecl sub_401130(char, LPCSTR lpExistingFileName) 其传入</description></item></channel></rss>