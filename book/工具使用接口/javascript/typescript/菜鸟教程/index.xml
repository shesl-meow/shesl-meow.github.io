<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>菜鸟教程 on shesl's blog</title><link>http://shesl-meow.github.io/book/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8%E6%8E%A5%E5%8F%A3/javascript/typescript/%E8%8F%9C%E9%B8%9F%E6%95%99%E7%A8%8B/</link><description>Recent content in 菜鸟教程 on shesl's blog</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>shesl-meow@qq.com (佘崧林)</managingEditor><webMaster>shesl-meow@qq.com (佘崧林)</webMaster><atom:link href="http://shesl-meow.github.io/book/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8%E6%8E%A5%E5%8F%A3/javascript/typescript/%E8%8F%9C%E9%B8%9F%E6%95%99%E7%A8%8B/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>http://shesl-meow.github.io/book/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8%E6%8E%A5%E5%8F%A3/javascript/typescript/%E8%8F%9C%E9%B8%9F%E6%95%99%E7%A8%8B/1.%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>shesl-meow@qq.com (佘崧林)</author><guid>http://shesl-meow.github.io/book/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8%E6%8E%A5%E5%8F%A3/javascript/typescript/%E8%8F%9C%E9%B8%9F%E6%95%99%E7%A8%8B/1.%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/</guid><description>内置类型 类型是 TypeScript 相较于 JavaScript 增加的特性，也是 TpyeScript 的重点内容。 变量声明 声明变量的类型及初始值： 1 var [变量名] : [类型] = 值; **注意：**变量不要使</description></item><item><title/><link>http://shesl-meow.github.io/book/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8%E6%8E%A5%E5%8F%A3/javascript/typescript/%E8%8F%9C%E9%B8%9F%E6%95%99%E7%A8%8B/2.%E6%8E%A7%E5%88%B6%E6%B5%81/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>shesl-meow@qq.com (佘崧林)</author><guid>http://shesl-meow.github.io/book/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8%E6%8E%A5%E5%8F%A3/javascript/typescript/%E8%8F%9C%E9%B8%9F%E6%95%99%E7%A8%8B/2.%E6%8E%A7%E5%88%B6%E6%B5%81/</guid><description>控制流 条件判断 循环 函数 参数类型 函数可以指定返回值类型与参数类型，比如： 1 2 3 function add(x: number, y: number): string { // ... } 上面定义的是两个 number 类型为参数，一个 string 类型为返</description></item><item><title/><link>http://shesl-meow.github.io/book/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8%E6%8E%A5%E5%8F%A3/javascript/typescript/%E8%8F%9C%E9%B8%9F%E6%95%99%E7%A8%8B/3.%E5%86%85%E7%BD%AE%E7%B1%BB%E5%9E%8B/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>shesl-meow@qq.com (佘崧林)</author><guid>http://shesl-meow.github.io/book/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8%E6%8E%A5%E5%8F%A3/javascript/typescript/%E8%8F%9C%E9%B8%9F%E6%95%99%E7%A8%8B/3.%E5%86%85%E7%BD%AE%E7%B1%BB%E5%9E%8B/</guid><description>内置类型 Number 概述 TypeScript 与 JavaScript 类似，支持 Number 对象。Number 对象是原始数值的包装对象。 对象属性 Number 对象支持的属性： MAX_VALUE、MIN_VALUE</description></item><item><title/><link>http://shesl-meow.github.io/book/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8%E6%8E%A5%E5%8F%A3/javascript/typescript/%E8%8F%9C%E9%B8%9F%E6%95%99%E7%A8%8B/4.%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>shesl-meow@qq.com (佘崧林)</author><guid>http://shesl-meow.github.io/book/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8%E6%8E%A5%E5%8F%A3/javascript/typescript/%E8%8F%9C%E9%B8%9F%E6%95%99%E7%A8%8B/4.%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/</guid><description>面向对象 接口 TypeScript 接口定义如下： 1 2 3 4 interface RunOptions { program:string; commandline:string[]|string|(()=&amp;gt;string); } 在 Interface 中定义方法： 1 2 3 4 interface IEmployee { getSalary: (number) =&amp;gt; number; // arrow function getManagerName(number): string; } Interface 可以定义方法类型。 继承使用关键字 exte</description></item><item><title/><link>http://shesl-meow.github.io/book/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8%E6%8E%A5%E5%8F%A3/javascript/typescript/%E8%8F%9C%E9%B8%9F%E6%95%99%E7%A8%8B/5.%E6%A8%A1%E5%9D%97/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>shesl-meow@qq.com (佘崧林)</author><guid>http://shesl-meow.github.io/book/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8%E6%8E%A5%E5%8F%A3/javascript/typescript/%E8%8F%9C%E9%B8%9F%E6%95%99%E7%A8%8B/5.%E6%A8%A1%E5%9D%97/</guid><description>模块 导出模块 模块导出使用关键字 export 关键字，语法格式如下： 1 2 3 4 // SomeInterface.ts export interface SomeInterface { // 代码部分 } 要在另外一个文件使用该模块就需要使用 import 关键字来导入: 1</description></item></channel></rss>