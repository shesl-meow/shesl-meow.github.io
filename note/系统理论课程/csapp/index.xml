<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>CSAPP on shesl's blog</title><link>http://shesl-meow.github.io/note/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/csapp/</link><description>Recent content in CSAPP on shesl's blog</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>shesl-meow@qq.com (佘崧林)</managingEditor><webMaster>shesl-meow@qq.com (佘崧林)</webMaster><lastBuildDate>Thu, 14 Oct 2021 01:51:12 +0800</lastBuildDate><atom:link href="http://shesl-meow.github.io/note/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/csapp/index.xml" rel="self" type="application/rss+xml"/><item><title>Respresenting and Manipulating Information</title><link>http://shesl-meow.github.io/note/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/csapp/2.representandmanipulate/</link><pubDate>Thu, 14 Oct 2021 01:51:12 +0800</pubDate><author>shesl-meow@qq.com (佘崧林)</author><guid>http://shesl-meow.github.io/note/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/csapp/2.representandmanipulate/</guid><description/></item><item><title>Tour of Computer-Systems</title><link>http://shesl-meow.github.io/note/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/csapp/1.tour/</link><pubDate>Thu, 14 Oct 2021 01:51:12 +0800</pubDate><author>shesl-meow@qq.com (佘崧林)</author><guid>http://shesl-meow.github.io/note/%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B/csapp/1.tour/</guid><description>Compilation Compiler: Program are translated into different forms. A classic compiler work in following sequence: Preprocessing Phase: Source program (hello.c) $$\Rightarrow$$ Pre-Processor (cpp) $\Rightarrow$ Modified source program (hello.i). Compilation Phase: Compiler (cc1) $$\Rightarrow$$ Assembly program (hello.s). Assembly Phase: Assembler (as) $$\Rightarrow$$ Relocatable object programs (hello.o). Linking Phase: Linker (ld) $$\Rightarrow$$ Executable object program (hello) We need to understand compilation systems work: Optimizing program performance; Understanding link-time errors; Avoiding security holes;</description></item></channel></rss>